{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","put","id","delete","Filter","props","onChange","changeHandler","value","PersonForm","changeNameHandler","name","changeNumberHandler","number","type","onClick","submitClickHandler","Persons","style","listStyleType","padding","persons","filter","person","toLocaleUpperCase","includes","map","key","deleteClickHandler","DeleteButton","Notification","notification","styleList","marginBottom","borderStyle","borderRadius","background","color","fontStyle","fontSize","level","length","className","text","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","message","setMessage","useEffect","personService","returnedPersons","sort","p1","p2","catch","error","errorText","request","JSON","stringify","stack","console","log","util","inspect","setTimeout","event","target","preventDefault","newPersons","parse","find","p","undefined","window","confirm","returnedPerson","concat","getAttribute","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9964d3b1.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst modify = (newPerson) => {\n  const request = axios.put(baseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, modify, remove }","// eslint-disable-next-line no-unused-vars\nimport React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport util from 'util'\n\n// eslint-disable-next-line no-unused-vars\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with:\n      <input\n        onChange={props.changeHandler}\n        value={props.value}\n      />\n    </div>\n  )\n}\n\n// eslint-disable-next-line no-unused-vars\nconst PersonForm = (props) => {\n  return (\n    <form>\n      <div>\n        name:\n        <input\n          onChange={props.changeNameHandler}\n          value={props.name}\n        />\n      </div>\n      <div>\n        number:\n        <input\n          onChange={props.changeNumberHandler}\n          value={props.number}\n        />\n      </div>\n      <div>\n        <button\n          type=\"submit\"\n          onClick={props.submitClickHandler}\n        >\n          add\n        </button>\n      </div>\n    </form>\n  )\n}\n\n// eslint-disable-next-line no-unused-vars\nconst Persons = (props) => {\n  return (\n    <ul style={{ listStyleType: 'none', padding: 0 }}>\n      {props.persons.filter(person => person.name.toLocaleUpperCase().includes(props.filter))\n        .map(person =>\n          <li key={person.name}>\n            {person.name} {person.number}&nbsp;\n            <DeleteButton id={person.id} deleteClickHandler={props.deleteClickHandler} />\n          </li>\n        )\n      }\n    </ul>\n  )\n}\n\n// eslint-disable-next-line no-unused-vars\nconst DeleteButton = (props) => {\n  return (\n    <button id={props.id} onClick={props.deleteClickHandler}>delete</button>\n  )\n}\n\n// eslint-disable-next-line no-unused-vars\nconst Notification = ({ notification }) => {\n  const styleList = [\n    { // INFO\n      padding: 10,\n      marginBottom: 10,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      background: 'lightgrey',\n      color: 'darkgreen',\n      fontStyle: 'normal',\n      fontSize: 20\n    },\n    { // WARN\n      padding: 10,\n      marginBottom: 10,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      background: 'grey',\n      color: 'blue',\n      fontStyle: 'italics',\n      fontSize: 20\n    },\n    { // ERROR\n      padding: 10,\n      marginBottom: 10,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      background: 'darkblue',\n      color: 'salmon',\n      fontStyle: 'bold',\n      fontSize: 20\n    }\n  ]\n  if (notification.level < 0 || notification.level >= styleList.length) {\n    return null\n  }\n  return (\n    <div className=\"notification\" style={styleList[notification.level]}>\n      <pre>{notification.text}</pre>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ message, setMessage ] = useState({ level: -1 })\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setNewFilter(event.target.value)\n\n  const handleSubmitClick = (event) => {\n    event.preventDefault()\n    /* commented out to test validation on backend\n    if (!newName || !newNumber) {\n      setMessage({text: `Error, please fill in both name and number`, level: 2})\n      setTimeout(() => setMessage({level: -1}), 15000)\n      return\n    }\n    */\n    const newPersons = JSON.parse(JSON.stringify(persons))\n    const person = newPersons.find(p => p.name === newName)\n    if (person !== undefined) {\n      // Modify person if already exist and user agrees, cancel operation otherwise\n      if (!window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        setMessage({ text: `Cancelled updating '${newName}'`, level: 1 })\n        setTimeout(() => setMessage({ level: -1 }), 10000)\n        return\n      }\n      person.name = newName\n      person.number = newNumber\n      personService.modify(person)\n        .then(returnedPerson => {\n          setPersons(newPersons.filter(p => {\n            if (p.id === returnedPerson.id) return returnedPerson\n            return p\n          }))})\n        .then(() => {\n          setMessage({ text: `Updated '${newName}'`, level: 0 })\n          setTimeout(() => setMessage({ level: -1 }), 5000)\n        })\n        .catch(error => {\n          let errorText\n          if (error.response) errorText = error.response.data.error\n          else if (error.request) errorText = JSON.stringify(error.request.data, null, 2)\n          else errorText = error.stack\n          console.log(`Failed modifying '${newName}':`,util.inspect(error))\n          setMessage({ text: `Failed modifying '${newName}'\\n${error.message}\\n${errorText}`, level: 2 })\n          setTimeout(() => setMessage({ level: -1 }), 15000)\n          return\n        })\n    } else {\n      // Create a new user with a number\n      personService.create({ name: newName, number: newNumber })\n        .then(returnedPerson => setPersons(newPersons.concat(returnedPerson).sort((p1, p2) => p1.name > p2.name)))\n        .then(() => {\n          setMessage({ text: `Added '${newName}'`, level: 0 })\n          setTimeout(() => setMessage({ level: -1 }), 5000)\n        })\n        .catch(error => {\n          let errorText\n          if (error.response) errorText = error.response.data.error\n          else if (error.request) errorText = JSON.stringify(error.request.data)\n          else errorText = error.stack\n          console.log(`Failed creating '${newName}':`,util.inspect(error))\n          setMessage({ text: `Failed creating '${newName}'\\n${error.message}\\n${errorText}`, level: 2 })\n          setTimeout(() => setMessage({ level: -1 }), 15000)\n          return\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleDeleteClick = (event) => {\n    const id = event.target.getAttribute('id')\n    const person = persons.find(person => person.id === id)\n    /* commented out to test validation on backend\n    if (id == null || person === undefined) {\n      setMessage({text: `Failed deleting person with id '${id}'`, level: 2})\n      setTimeout(() => setMessage({level: -1}), 15000)\n      return\n    }\n    */\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.remove(person.id)\n        .then(() => setPersons(persons.filter(p => p.id !== person.id)))\n        .then(() => {\n          setMessage({ text: `Deleted '${person.name}' with id '${person.id}'`,level: 0 })\n          setTimeout(() => setMessage({ level: -1 }), 5000)\n        })\n        .catch(error => {\n          let errorText\n          if (error.response) errorText = error.response.data.error\n          else if (error.request) errorText = JSON.stringify(error.request.data)\n          else errorText = error.stack\n          console.log(`Failed deleting '${person.name}' with id '${person.id}':`,util.inspect(error))\n          setMessage({ text: `Failed deleting '${person.name}' with id '${person.id}'\\n${errorText}`,\n            level: 2 })\n          setTimeout(() => setMessage({ level: -1 }), 15000)\n          return\n        })\n    } else {\n      setMessage({ text: `Cancelling deletion of '${person.name}' with id '${person.id}'`, level: 1 })\n      setTimeout(() => setMessage({ level: -1 }), 10000)\n      return\n    }\n  }\n\n  useEffect(() => {\n    personService.getAll()\n      .then(returnedPersons => {\n        setPersons(returnedPersons.sort((p1, p2) => p1.name > p2.name))\n      })\n      .catch(error => {\n        let errorText\n        if (error.response) errorText = error.response.data.error\n        else if (error.request) errorText = JSON.stringify(error.request.data)\n        else errorText = error.stack\n        console.log('Could not get person list from server:',util.inspect(error))\n        setMessage({ text: `Could not get person list from server\\n${errorText}`, level: 2 })\n        setTimeout(() => setMessage({ level: -1 }), 15000)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={message} />\n      <Filter\n        changeHandler={handleFilterChange}\n        value={newFilter}\n      />\n      <h3>add a new</h3>\n      <PersonForm\n        changeNameHandler={handleNameChange}\n        name={newName}\n        changeNumberHandler={handleNumberChange}\n        number={newNumber}\n        submitClickHandler={handleSubmitClick}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        filter={newFilter.toLocaleUpperCase()}\n        deleteClickHandler={handleDeleteClick}\n      />\n    </div>\n  )\n\n}\n\nexport default App","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n// eslint-disable-next-line no-unused-vars\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}